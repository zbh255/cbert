package config

import (
	"encoding/json"
)

type Config interface {
	DecodeConfig([]byte) (*AutoGenerated, error)
	EncodeConfig() ([]byte, error)
}

type AutoGenerated struct {
	Source struct {
		Dir        string `json:"dir"`
		RequestNum int    `json:"request_num"`
		UserNum    int    `json:"user_num"`
	} `json:"source"`
	Connection struct {
		Timeout int `json:"timeout"`
	} `toml:"connection"`
	Status struct {
		Dest string `json:"dest"`
		Addr string `json:"addr"`
	} `toml:"status"`
	Log struct {
		AccessLog string `json:"access_log"`
		ErrorLog  string `json:"error_log"`
	} `json:"log"`
}

func (a *AutoGenerated) DecodeConfig(confBytes []byte) (*AutoGenerated, error) {
	err := json.Unmarshal(confBytes,a)
	return a, err
}

// format marshal
func (a *AutoGenerated) EncodeConfig() ([]byte, error) {
	return json.MarshalIndent(a,"\n","\t")
}
